{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/moe.sarraf/Documents/GitHub/cwi-docs-nextjs/src/app/test/TestHeader.tsx"],"sourcesContent":["\"use client\";\nimport Image from \"next/image\";\nimport { useTestSearch } from \"./TestSearchProvider\";\nimport { useLanguage } from \"@/components/LanguageProvider\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useRouter, usePathname } from \"next/navigation\";\n\nexport default function TestHeader() {\n  const { openSearch } = useTestSearch();\n  const { currentLanguage, currentRegion, availableLanguages, setLanguage, getLanguageDisplay } = useLanguage();\n  const [isLanguageDropdownOpen, setIsLanguageDropdownOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const router = useRouter();\n  const pathname = usePathname();\n\n  const handleLanguageSelect = (language: string, region: string) => {\n    setLanguage(language, region);\n    setIsLanguageDropdownOpen(false);\n    \n    // Navigate to the equivalent page in the new language\n    if (pathname.startsWith('/docs/')) {\n      const pathSegments = pathname.split('/');\n      if (pathSegments.length >= 3) {\n        // Replace the language segment with the new language\n        pathSegments[2] = language;\n        const newPath = pathSegments.join('/');\n        router.push(newPath);\n      }\n    }\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsLanguageDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-black backdrop-blur border-b border-purple-900/30\">\n      <div className=\"max-w mx-auto px-4\">\n        <div className=\"flex justify-between items-center h-14\">\n          {/* Logo and language selector */}\n          <div className=\"flex items-center gap-3\">\n            <Image src=\"/caseware-logo.svg\" alt=\"Caseware\" width={130} height={22} priority />\n            <div className=\"relative\" ref={dropdownRef}>\n              <button \n                onClick={() => setIsLanguageDropdownOpen(!isLanguageDropdownOpen)}\n                className=\"inline-flex items-center gap-1 rounded-full bg-purple-900/20 border border-purple-700/50 px-2.5 py-1 text-xs text-purple-200 hover:bg-purple-800/30 transition-colors\"\n              >\n                {getLanguageDisplay()}\n                <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </button>\n              \n              {isLanguageDropdownOpen && (\n                <div className=\"absolute top-full left-0 mt-1 w-48 bg-black border border-purple-700/50 rounded-lg shadow-lg z-50\">\n                  <div className=\"py-1\">\n                    {availableLanguages.map((lang) => (\n                      <div key={lang.code}>\n                        <div className=\"px-3 py-2 text-xs font-semibold text-purple-400 uppercase tracking-wider\">\n                          {lang.name}\n                        </div>\n                        {lang.regions.map((region) => (\n                          <button\n                            key={`${lang.code}-${region}`}\n                            onClick={() => handleLanguageSelect(lang.code, region)}\n                            className={`w-full text-left px-6 py-2 text-sm hover:bg-purple-900/30 transition-colors ${\n                              currentLanguage === lang.code && currentRegion === region\n                                ? 'text-cyan-400 bg-purple-900/30'\n                                : 'text-gray-200'\n                            }`}\n                          >\n                            {lang.name} - {region.charAt(0).toUpperCase() + region.slice(1)}\n                          </button>\n                        ))}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right nav */}\n          <nav className=\"hidden md:flex items-center gap-4\">\n            <button \n              onClick={openSearch}\n              className=\"hidden lg:inline-flex items-center gap-1 rounded-full bg-cyan-900/20 border border-cyan-700/50 px-2.5 py-1 text-xs text-cyan-200 hover:text-cyan-100 hover:bg-cyan-800/30 transition-colors\"\n            >\n              <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n              âŒ˜K\n            </button>\n\n            <a href=\"#\" className=\"px-2 py-1 text-sm text-gray-300 hover:text-purple-300 transition-colors\">Docs</a>\n            <a href=\"#\" className=\"px-2 py-1 text-sm text-gray-300 hover:text-purple-300 transition-colors\">Blog</a>\n            <a href=\"#\" className=\"px-2 py-1 text-sm text-gray-300 hover:text-purple-300 transition-colors\">Showcase</a>\n            <a href=\"#\" className=\"px-2 py-1 text-sm text-gray-300 hover:text-purple-300 transition-colors\">Sponsor</a>\n\n            <button className=\"inline-flex items-center gap-1 rounded-full bg-gradient-to-r from-purple-600 to-cyan-600 hover:from-purple-500 hover:to-cyan-500 px-3 py-1 text-sm text-white transition-all duration-200\">\n              Plus\n            </button>\n\n            <div className=\"ml-2 w-8 h-8 bg-gray-800/70 border border-gray-700 rounded-full flex items-center justify-center cursor-pointer hover:bg-gray-800 transition-colors\">\n              <svg className=\"w-5 h-5 text-gray-300\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\">\n                <path fillRule=\"evenodd\" d=\"M12 .5A11.5 11.5 0 0 0 .5 12.3c0 5.2 3.4 9.6 8.2 11.1.6.1.8-.3.8-.6v-2.1c-3.3.7-4-1.4-4-1.4-.5-1.1-1.2-1.4-1.2-1.4-1-.7.1-.7.1-.7 1.1.1 1.6 1.2 1.6 1.2 1 .1.7 1.8 2.8 1.3.1-.8.4-1.3.7-1.6-2.7-.3-5.4-1.4-5.4-6 0-1.3.5-2.5 1.4-3.4-.1-.3-.6-1.6.1-3.3 0 0 1.1-.4 3.5 1.3a12.1 12.1 0 0 1 6.3 0c2.4-1.7 3.5-1.3 3.5-1.3.7 1.7.3 3 .1 3.3.9.9 1.4 2.1 1.4 3.4 0 4.6-2.7 5.7-5.4 6 .4.3.7 1 .7 2v3c0 .3.2.7.8.6 4.8-1.5 8.2-5.9 8.2-11.1A11.5 11.5 0 0 0 12 .5Z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </nav>\n\n          {/* Mobile menu */}\n          <div className=\"md:hidden\">\n            <button className=\"text-gray-300 hover:text-purple-300 focus:outline-none focus:text-purple-300 transition-colors\">\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///Users/moe.sarraf/Documents/GitHub/cwi-docs-nextjs/src/app/test/TestSidebar.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useLanguage } from '@/components/LanguageProvider';\nimport { useRouter } from 'next/navigation';\n\n// TypeScript interfaces for the sidebar data\ninterface NavigationItem {\n    name: string;\n    href: string | null;\n    children?: NavigationItem[];\n}\n\ninterface NavigationSection {\n    id: string;\n    title: string;\n    items: NavigationItem[];\n}\n\ninterface SidebarData {\n    language: string;\n    region: string;\n    navigationSections: NavigationSection[];\n}\n\ninterface SidebarProps {\n    data?: SidebarData;\n}\n\nexport default function TestSidebar({ data }: SidebarProps) {\n    const { currentLanguage, currentRegion } = useLanguage();\n    const router = useRouter();\n    const [navigationSections, setNavigationSections] = useState<NavigationSection[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n    const [activeItem, setActiveItem] = useState<string | null>(null);\n    const [hoveredItem, setHoveredItem] = useState<string | null>(null);\n\n    // Load navigation data for the current language\n    useEffect(() => {\n        const loadNavigation = async () => {\n            setIsLoading(true);\n            // Clear state when language changes to prevent conflicts\n            setExpandedItems(new Set());\n            setActiveItem(null);\n            setHoveredItem(null);\n            \n            try {\n                // Try to load language-region specific navigation first\n                const response = await fetch(`/api/navigation/${currentLanguage}?region=${currentRegion}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setNavigationSections(data.navigationSections || []);\n                } else {\n                    // Fallback to default navigation\n                    const fallbackResponse = await fetch('/api/navigation');\n                    if (fallbackResponse.ok) {\n                        const fallbackData = await fallbackResponse.json();\n                        setNavigationSections(fallbackData.navigationSections || []);\n                    } else {\n                        // No fallback - show empty navigation\n                        setNavigationSections([]);\n                    }\n                }\n            } catch (error) {\n                console.error('Failed to load navigation:', error);\n                // No fallback - show empty navigation\n                setNavigationSections([]);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        loadNavigation();\n    }, [currentLanguage, currentRegion]);\n\n    const toggleExpanded = (itemName: string) => {\n        const newExpanded = new Set(expandedItems);\n        if (newExpanded.has(itemName)) {\n            newExpanded.delete(itemName);\n        } else {\n            newExpanded.add(itemName);\n        }\n        setExpandedItems(newExpanded);\n    };\n\n    const expandAll = () => {\n        const allItems = new Set<string>();\n        const collectItems = (items: NavigationItem[]) => {\n            items.forEach(item => {\n                if (item.children) {\n                    allItems.add(item.name);\n                    collectItems(item.children);\n                }\n            });\n        };\n        data.navigationSections.forEach(section => collectItems(section.items));\n        setExpandedItems(allItems);\n    };\n\n    const collapseAll = () => {\n        setExpandedItems(new Set());\n    };\n\n\n    const handleItemClick = (item: NavigationItem) => {\n        if (item.href) {\n            // Navigate to the HTML file in the test docs route\n            router.push(`/test/docs${item.href}`);\n            setActiveItem(item.name);\n        }\n    };\n\n    const renderNavigationItem = (item: NavigationItem, level: number = 0) => {\n        const hasChildren = item.children && item.children.length > 0;\n        const isExpanded = expandedItems.has(item.name);\n        const isActive = activeItem === item.name;\n        const isHovered = hoveredItem === item.name;\n\n        // Create unique key by combining language, region, and item name\n        const uniqueKey = `${currentLanguage}-${currentRegion}-${item.name}-${item.href || 'no-href'}`;\n\n        return (\n            <div key={uniqueKey} className=\"relative\">\n                <div className=\"flex items-center\">\n                    <button\n                        onClick={() => {\n                            if (hasChildren) {\n                                toggleExpanded(item.name);\n                            } else if (item.href) {\n                                handleItemClick(item);\n                            }\n                        }}\n                        onMouseEnter={() => setHoveredItem(item.name)}\n                        onMouseLeave={() => setHoveredItem(null)}\n                        className={`flex items-center justify-between w-full text-left py-1 px-2 rounded text-sm transition-all duration-200 ${\n                            hasChildren \n                                ? 'cursor-pointer hover:text-purple-400' \n                                : item.href \n                                    ? 'cursor-pointer hover:text-cyan-400' \n                                    : 'cursor-default'\n                        } ${isActive ? 'text-cyan-400' : 'text-gray-300'}`}\n                    >\n                        <span className=\"flex-1\">{item.name}</span>\n                        {hasChildren && (\n                            <svg\n                                className={`w-3 h-3 text-gray-400 transition-transform ${\n                                    isExpanded ? 'rotate-90' : ''\n                                }`}\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth={2}\n                                    d=\"M9 5l7 7-7 7\"\n                                />\n                            </svg>\n                        )}\n                    </button>\n                </div>\n                \n                {/* Purple highlight line for active items */}\n                {isActive && (\n                    <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-purple-400 z-10\"></div>\n                )}\n                \n                {hasChildren && isExpanded && (\n                    <div className=\"ml-4 relative\">\n                        {/* Continuous vertical line for all children - spans entire nested section */}\n                        <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-cyan-400/50\"></div>\n                        {item.children!.map((child) => renderNavigationItem(child, level + 1))}\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    if (isLoading) {\n        return (\n            <div className=\"w-80 bg-black text-white h-screen overflow-y-auto border-r border-purple-900/30\">\n                <div className=\"p-4\">\n                    <div className=\"flex items-center justify-center h-32\">\n                        <div className=\"text-purple-400\">Loading navigation...</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"w-80 bg-black text-white h-screen overflow-y-auto border-r border-purple-900/30\">\n            <div className=\"p-4\">\n                {/* Navigation Header */}\n                <div className=\"mb-6\">\n                    <div className=\"flex items-center justify-between\">\n                        <h2 className=\"text-purple-400 text-xs font-mono uppercase tracking-wider\">\n                            Navigation\n                        </h2>\n                        <div className=\"flex space-x-1\">\n                            <button\n                                onClick={expandAll}\n                                className=\"p-1 text-gray-400 hover:text-purple-400 transition-colors\"\n                                title=\"Expand All\"\n                            >\n                                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                                </svg>\n                            </button>\n                            <button\n                                onClick={collapseAll}\n                                className=\"p-1 text-gray-400 hover:text-purple-400 transition-colors\"\n                                title=\"Collapse All\"\n                            >\n                                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Navigation Sections */}\n                {navigationSections.map((section) => (\n                    <div key={section.id} className=\"mb-6\">\n                        <h2 className=\"text-cyan-400 text-xs font-mono uppercase tracking-wider mb-3\">\n                            {section.title}\n                        </h2>\n                        <div className=\"space-y-0\">\n                            {section.items.map((item) => renderNavigationItem(item))}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}