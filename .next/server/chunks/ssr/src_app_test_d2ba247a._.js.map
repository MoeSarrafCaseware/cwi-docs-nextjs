{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/moe.sarraf/Documents/GitHub/cwi-docs-nextjs/src/app/test/TestSearchModal.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport { useLanguage } from \"@/components/LanguageProvider\";\n\ntype SearchResult = {\n  title: string;\n  path: string;\n  section: string;\n  level: number;\n  type: 'page' | 'section';\n  content?: string;\n  matchType: 'title' | 'content' | 'keyword';\n};\n\ntype SearchData = {\n  results: SearchResult[];\n  sectionResults: {[key: string]: SearchResult[]};\n  sortedSections: string[];\n  query: string;\n};\n\ntype TestSearchModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nexport default function TestSearchModal({ isOpen, onClose }: TestSearchModalProps) {\n  const [query, setQuery] = useState(\"\");\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [searchData, setSearchData] = useState<SearchData | null>(null);\n  const [isSearching, setIsSearching] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const router = useRouter();\n  const { currentLanguage, currentRegion, getLanguageDisplay } = useLanguage();\n\n  // Flatten all results for keyboard navigation\n  const allResults = useMemo(() => {\n    if (!searchData) return [];\n    const flattened: SearchResult[] = [];\n    searchData.sortedSections.forEach(section => {\n      if (searchData.sectionResults[section]) {\n        flattened.push(...searchData.sectionResults[section]);\n      }\n    });\n    return flattened;\n  }, [searchData]);\n\n  // Handle keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (!isOpen) return;\n\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault();\n          setSelectedIndex(prev => \n            prev < allResults.length - 1 ? prev + 1 : 0\n          );\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n          setSelectedIndex(prev => \n            prev > 0 ? prev - 1 : allResults.length - 1\n          );\n          break;\n        case 'Enter':\n          e.preventDefault();\n          if (allResults[selectedIndex]) {\n            handleSelect(allResults[selectedIndex]);\n          }\n          break;\n        case 'Escape':\n          e.preventDefault();\n          onClose();\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, allResults, selectedIndex, onClose]);\n\n  // Focus input when modal opens\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n\n  // Reset selection when query changes\n  useEffect(() => {\n    setSelectedIndex(0);\n  }, [query]);\n\n  // Search effect\n  useEffect(() => {\n    if (!query.trim() || query.length < 2) {\n      setSearchData(null);\n      setIsSearching(false);\n      return;\n    }\n\n    const searchTimeout = setTimeout(async () => {\n      setIsSearching(true);\n      try {\n        const response = await fetch(`/api/search?q=${encodeURIComponent(query)}&lang=${currentLanguage}&region=${currentRegion}`);\n        const data = await response.json();\n        \n        if (data.results) {\n          const results: SearchResult[] = data.results.map((result: any) => ({\n            title: result.title,\n            path: `/test/docs${result.href}`, // Route to test docs\n            section: result.section,\n            level: 1,\n            type: 'page' as const,\n            content: result.snippet,\n            matchType: result.matchType\n          }));\n          \n          const sectionResults: {[key: string]: SearchResult[]} = {};\n          if (data.sectionResults) {\n            Object.keys(data.sectionResults).forEach(section => {\n              sectionResults[section] = data.sectionResults[section].map((result: any) => ({\n                title: result.title,\n                path: `/test/docs${result.href}`, // Route to test docs\n                section: result.section,\n                level: 1,\n                type: 'page' as const,\n                content: result.snippet,\n                matchType: result.matchType\n              }));\n            });\n          }\n          \n          setSearchData({\n            results,\n            sectionResults,\n            sortedSections: data.sortedSections || [],\n            query: data.query\n          });\n        } else {\n          setSearchData(null);\n        }\n      } catch (error) {\n        console.error('Search error:', error);\n        setSearchData(null);\n      } finally {\n        setIsSearching(false);\n      }\n    }, 300); // Debounce search\n\n    return () => clearTimeout(searchTimeout);\n  }, [query, currentLanguage, currentRegion]);\n\n  const handleSelect = (result: SearchResult) => {\n    if (result.type === 'page') {\n      router.push(result.path);\n    }\n    onClose();\n    setQuery(\"\");\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      {/* Backdrop */}\n      <div \n        className=\"fixed inset-0 bg-black/70 backdrop-blur-sm\"\n        onClick={onClose}\n      />\n      \n      {/* Modal */}\n      <div className=\"relative min-h-screen flex items-start justify-center pt-[20vh] px-4\">\n        <div className=\"relative w-full max-w-2xl\">\n          {/* Search Input */}\n          <div className=\"relative\">\n            <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\n              <svg className=\"h-5 w-5 text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </div>\n            <input\n              ref={inputRef}\n              type=\"text\"\n              placeholder={`Search documentation in ${getLanguageDisplay()}...`}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              className=\"w-full pl-12 pr-4 py-4 text-lg bg-purple-900/30 border border-purple-700/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500 transition-all duration-200\"\n            />\n            <div className=\"absolute inset-y-0 right-0 pr-4 flex items-center\">\n              <kbd className=\"inline-flex items-center px-2 py-1 text-xs font-mono text-purple-300 bg-purple-800/50 border border-purple-600/50 rounded\">\n                ESC\n              </kbd>\n            </div>\n          </div>\n\n          {/* Search Results */}\n          {query.length >= 2 && (\n            <div className=\"mt-4 bg-black/90 border border-purple-800/50 rounded-lg shadow-2xl backdrop-blur-sm\">\n              {isSearching ? (\n                <div className=\"p-6 text-center\">\n                  <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-cyan-500 mx-auto mb-2\"></div>\n                  <p className=\"text-purple-400 text-sm\">Searching...</p>\n                </div>\n              ) : searchData && searchData.results.length > 0 ? (\n                <div className=\"max-h-96 overflow-y-auto\">\n                  {searchData.sortedSections.map((section, sectionIndex) => {\n                    const sectionResults = searchData.sectionResults[section] || [];\n                    if (sectionResults.length === 0) return null;\n\n                    return (\n                      <div key={section} className=\"border-b border-purple-800/30 last:border-b-0\">\n                        <div className=\"px-4 py-2 bg-purple-900/20 border-b border-purple-800/30\">\n                          <h3 className=\"text-xs font-semibold text-cyan-400 uppercase tracking-wider\">\n                            {section}\n                          </h3>\n                        </div>\n                        <div className=\"py-1\">\n                          {sectionResults.map((result, resultIndex) => {\n                            const globalIndex = allResults.findIndex(r => r === result);\n                            const isSelected = globalIndex === selectedIndex;\n                            \n                            return (\n                              <button\n                                key={`${section}-${resultIndex}`}\n                                onClick={() => handleSelect(result)}\n                                className={`w-full text-left px-4 py-3 hover:bg-purple-800/30 transition-colors ${\n                                  isSelected ? 'bg-purple-800/40 border-l-2 border-cyan-400' : ''\n                                }`}\n                              >\n                                <div className=\"flex items-start gap-3\">\n                                  <div className=\"flex-shrink-0 mt-1\">\n                                    <div className={`w-2 h-2 rounded-full ${\n                                      result.matchType === 'title' ? 'bg-cyan-400' : \n                                      result.matchType === 'content' ? 'bg-purple-400' : 'bg-gray-400'\n                                    }`}></div>\n                                  </div>\n                                  <div className=\"flex-1 min-w-0\">\n                                    <div className=\"flex items-center gap-2 mb-1\">\n                                      <h4 className={`text-sm font-medium ${\n                                        isSelected ? 'text-cyan-300' : 'text-white'\n                                      }`}>\n                                        {result.title}\n                                      </h4>\n                                      <span className={`text-xs px-2 py-0.5 rounded-full ${\n                                        result.matchType === 'title' ? 'bg-cyan-400/20 text-cyan-300' :\n                                        result.matchType === 'content' ? 'bg-purple-400/20 text-purple-300' :\n                                        'bg-gray-400/20 text-gray-300'\n                                      }`}>\n                                        {result.matchType}\n                                      </span>\n                                    </div>\n                                    {result.content && (\n                                      <p className=\"text-xs text-gray-400 line-clamp-2\">\n                                        {result.content}\n                                      </p>\n                                    )}\n                                    <div className=\"flex items-center gap-2 mt-1\">\n                                      <span className=\"text-xs text-purple-400 font-mono\">\n                                        {result.path.replace('/test/docs', '')}\n                                      </span>\n                                    </div>\n                                  </div>\n                                </div>\n                              </button>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : query.length >= 2 ? (\n                <div className=\"p-6 text-center\">\n                  <svg className=\"w-12 h-12 mx-auto mb-3 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                  <p className=\"text-gray-400 mb-1\">No results found</p>\n                  <p className=\"text-xs text-gray-500\">Try different keywords or check your spelling</p>\n                </div>\n              ) : null}\n            </div>\n          )}\n\n          {/* Search Tips */}\n          {query.length < 2 && (\n            <div className=\"mt-4 bg-black/50 border border-purple-800/30 rounded-lg p-4\">\n              <div className=\"flex items-center gap-2 mb-3\">\n                <div className=\"w-1.5 h-1.5 bg-purple-400 rounded-full\"></div>\n                <h3 className=\"text-sm font-semibold text-purple-400 uppercase tracking-wider\">Search Tips</h3>\n              </div>\n              <div className=\"space-y-2 text-sm text-gray-400\">\n                <div className=\"flex items-center gap-2\">\n                  <kbd className=\"px-2 py-1 text-xs bg-purple-800/50 border border-purple-600/50 rounded text-purple-300\">↑↓</kbd>\n                  <span>Navigate results</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <kbd className=\"px-2 py-1 text-xs bg-purple-800/50 border border-purple-600/50 rounded text-purple-300\">Enter</kbd>\n                  <span>Select result</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <kbd className=\"px-2 py-1 text-xs bg-purple-800/50 border border-purple-600/50 rounded text-purple-300\">Esc</kbd>\n                  <span>Close search</span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file:///Users/moe.sarraf/Documents/GitHub/cwi-docs-nextjs/src/app/test/TestSearchProvider.tsx"],"sourcesContent":["\"use client\";\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { usePathname } from 'next/navigation';\nimport TestSearchModal from './TestSearchModal';\n\ntype TestSearchContextType = {\n  isSearchOpen: boolean;\n  openSearch: () => void;\n  closeSearch: () => void;\n};\n\nconst TestSearchContext = createContext<TestSearchContextType | undefined>(undefined);\n\nexport function TestSearchProvider({ children }: { children: React.ReactNode }) {\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const pathname = usePathname();\n\n  const openSearch = () => setIsSearchOpen(true);\n  const closeSearch = () => setIsSearchOpen(false);\n\n  // Handle Cmd+K shortcut - only respond when in /test route\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {\n        // Only respond if we're in the /test route\n        if (pathname.startsWith('/test')) {\n          e.preventDefault();\n          openSearch();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [pathname]);\n\n  return (\n    <TestSearchContext.Provider value={{ isSearchOpen, openSearch, closeSearch }}>\n      {children}\n      <TestSearchModal isOpen={isSearchOpen} onClose={closeSearch} />\n    </TestSearchContext.Provider>\n  );\n}\n\nexport function useTestSearch() {\n  const context = useContext(TestSearchContext);\n  if (context === undefined) {\n    throw new Error('useTestSearch must be used within a TestSearchProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AACA;AAHA;;;;;AAWA,MAAM,kCAAoB,IAAA,sNAAa,EAAoC;AAEpE,SAAS,mBAAmB,EAAE,QAAQ,EAAiC;IAC5E,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IACjD,MAAM,WAAW,IAAA,iJAAW;IAE5B,MAAM,aAAa,IAAM,gBAAgB;IACzC,MAAM,cAAc,IAAM,gBAAgB;IAE1C,2DAA2D;IAC3D,IAAA,kNAAS,EAAC;QACR,MAAM,gBAAgB,CAAC;YACrB,IAAI,CAAC,EAAE,OAAO,IAAI,EAAE,OAAO,KAAK,EAAE,GAAG,KAAK,KAAK;gBAC7C,2CAA2C;gBAC3C,IAAI,SAAS,UAAU,CAAC,UAAU;oBAChC,EAAE,cAAc;oBAChB;gBACF;YACF;QACF;QAEA,SAAS,gBAAgB,CAAC,WAAW;QACrC,OAAO,IAAM,SAAS,mBAAmB,CAAC,WAAW;IACvD,GAAG;QAAC;KAAS;IAEb,qBACE,8OAAC,kBAAkB,QAAQ;QAAC,OAAO;YAAE;YAAc;YAAY;QAAY;;YACxE;0BACD,8OAAC,iJAAe;gBAAC,QAAQ;gBAAc,SAAS;;;;;;;;;;;;AAGtD;AAEO,SAAS;IACd,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}